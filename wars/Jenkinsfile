node {

  stage('Preparing build') {
    sh 'docker pull georchestra/jenkins-builder:sid-jdk-8'
    checkout([ $class: 'GitSCM',
               branches: [[name: "*/master"]],
               doGenerateSubmoduleConfigurations: false,
               extensions: [[ $class: 'SubmoduleOption',
                              disableSubmodules: false,
                              parentCredentials: false,
                              recursiveSubmodules: true,
                              reference: '',
                              trackingSubmodules: false]],
               submoduleCfg: [],
               userRemoteConfigs: [[ url: 'https://github.com/georchestra/georchestra.git' ]]
            ])

  }

  stage('build mandatory modules') {
    sh """mvn clean install -B --non-recursive"""
    sh """mvn clean install -B -pl commons,ogc-server-statistics"""
  }
  stage('build / refresh geoserver & geonetwork artifacts') {
    sh """mvn clean install -B -f geonetwork/pom.xml"""
    sh """mvn clean install -B -f geoserver/pom.xml"""
  }
  stage("build artifacts") {
    sh """mvn package -B \
          -pl atlas,cas-server-webapp,security-proxy,header,mapfishapp,extractorapp,analytics,geoserver/webapp,console,geonetwork/web,geowebcache-webapp"""
  } // stage
  stage("Publishing artifacts") {
    sh "mkdir -p /var/www/packages.georchestra.org/htdocs/wars-master"
    sh "rm -f /var/www/packages.georchestra.org/htdocs/wars-master/*.war"
    sh "cp **/target/*.war geonetwork/web/target/*.war geoserver/webapp/target/*.war /var/www/packages.georchestra.org/htdocs/wars-master/"

    // TODO publish on artifactory instead
  } // stage
} // node
