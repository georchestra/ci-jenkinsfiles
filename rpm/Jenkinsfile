node {
  stage('login onto docker-hub') {
    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'geor-docker-hub',
        usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
          sh "export DOCKER_API_VERSION=1.23 && docker login -u ${env.USERNAME} -p '${env.PASSWORD}'"
    }
  }

  // Pulling the docker builder image
  stage('docker pull the geOrchestra builder image') {
    sh 'docker pull georchestra/jenkins-builder'
  }
  stage('build') {
    withDockerContainer(image: 'georchestra/jenkins-builder', args: """--privileged -u 0:0   \
  -v /var/www/packages.georchestra.org/htdocs:/var/www/packages.georchestra.org/htdocs \
  -v /home/jenkins-tools/gnupg:/root/.gnupg -v /home/jenkins-tools/m2_1512:/root/.m2_repo""") {

      stage('Configuring things up & checking out the geOrchestra repository') {
        git url:'https://github.com/georchestra/georchestra.git', branch:"master"
        sh "rm -rf /root/.m2/repository && mkdir -p /root/.m2 && cp -r /root/.m2_repo/repository /root/.m2/"
        sh "git config --global user.email 'psc@georchestra.org'"
        sh "git config --global user.name 'geOrchestra PSC'"
        sh "git submodule update --init --recursive"
        sh 'service docker start'
      } // stage
      stage('build mandatory modules') {
        sh """mvn clean install -fn --non-recursive"""
        sh """mvn clean install -fn -pl config"""
        sh """mvn clean install -fn -pl commons,epsg-extension,ogc-server-statistics"""
      }
      stage('prepare RPM configuration') {
        sh "echo '%_gpg_name F10EAFF4' > ~/.rpmmacros"
      }
      stage('build / refresh geoserver & geonetwork artifacts') {
        sh """mvn clean install -f geonetwork/pom.xml -DskipTests"""
        sh """mvn clean install -f geoserver/pom.xml -DskipTests"""
      }
      stage('build rpm packages') {
        sh """mvn clean package rpm:rpm                                                                                                                                          \
              -pl catalogapp,cas-server-webapp,downloadform,security-proxy,header,mapfishapp,extractorapp,analytics,geoserver/webapp,ldapadmin,geonetwork/web,geowebcache-webapp \
              -PrpmPackage -DskipTests -Drpm.gpg.key=F10EAFF4"""
      } // stage
      stage('publish yum packages') {
        sh """echo "Cleaning up old dependencies (but not geoserver-geofence, managed by another build) ..."
              find /var/www/packages.georchestra.org/htdocs/yum/master/ -name "*.rpm" ! -name "*geoserver-geofence*" -exec rm -f {} \\;
              echo "Copying generated RPMs onto the repository ..."
              find . -name *.rpm -exec cp {} /var/www/packages.georchestra.org/htdocs/yum/master/ \\;
              echo "Running createrepo to update repository metadatas ..."
              createrepo /var/www/packages.georchestra.org/htdocs/yum/master/
              echo "Done."
           """
      } // stage
      stage("Saving tests results") {
        // this requires the Junit Jenkins module
        junit '**/target/surefire-reports/TEST-*.xml'
      } // stage
    } // withDocker
  } // stage
} // node
