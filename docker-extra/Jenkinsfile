node {
  // Pulling the docker builder image
  stage('docker pull the geOrchestra builder image') {
    sh 'docker pull georchestra/jenkins-builder:jdk8'
  }
  stage('build') {
    withDockerContainer(image: 'georchestra/jenkins-builder:sid-jdk-8', args: """--privileged -u 0:0   \
  -v /var/www/packages.georchestra.org/htdocs:/var/www/packages.georchestra.org/htdocs \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v /home/jenkins-tools/gnupg:/root/.gnupg -v /home/jenkins-tools/m2_master:/root/.m2_repo""") {
      stage('Checking out the geOrchestra repository') {
        checkout([ $class: 'GitSCM',
                   branches: [[name: '*/master']],
                   userRemoteConfigs: [[url: 'https://github.com/georchestra/georchestra.git']]
                ])
      }
      stage('configure georchestra docker-hub account / login on docker-hub') {
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'geor-docker-hub',
              usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
            sh "docker login -u ${env.USERNAME} -p '${env.PASSWORD}'"
        }
      }

      stage('build postgresql geOr image') {
        sh """cd ${WORKSPACE}/postgresql                    && \
              export DOCKER_API_VERSION=1.23                && \
              docker pull postgres:11                       && \
              docker build -t georchestra/database:latest . && \
              docker push georchestra/database:latest"""
      } //stage
      stage("build ldap geOr image") {
        sh """cd ${WORKSPACE}/ldap                          && \
              export DOCKER_API_VERSION=1.23                && \
              docker pull dinkel/openldap                   && \
              docker build -t georchestra/ldap:latest .     && \
              docker push georchestra/ldap:latest"""
      } // stage
      stage("build ssh_data geOr image") {
        sh """cd ${WORKSPACE}/docker/ssh_data               && \
              export DOCKER_API_VERSION=1.23                && \
              docker pull debian:jessie                     && \
              docker build -t georchestra/ssh_data:latest . && \
              docker push georchestra/ssh_data:latest"""
      } // stage
    } // withDocker
  } // stage
} // node
