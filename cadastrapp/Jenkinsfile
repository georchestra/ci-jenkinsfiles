node {
  stage('login onto docker-hub') {
    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'geor-docker-hub',
        usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
          sh "export DOCKER_API_VERSION=1.23 && docker login -u ${env.USERNAME} -p '${env.PASSWORD}'"
    }
  }

  stage('docker pull the geOrchestra builder image') {
      sh 'docker pull georchestra/jenkins-builder'
  }

  withDockerContainer(image: 'georchestra/jenkins-builder', args: """--privileged -u 0:0   \
  -v /var/www/packages.georchestra.org/htdocs:/var/www/packages.georchestra.org/htdocs \
  -v /home/jenkins-tools/gnupg:/root/.gnupg""") {

    stage('Preparation (git checkout & launching docker)') {
      git url:'https://github.com/georchestra/cadastrapp.git'
      // This is specific to the geOrchestra build env and is probably not needed
      sh 'echo "172.16.42.42 packages.georchestra.org" >> /etc/hosts'
      sh "git submodule update --init --recursive"
      sh 'service docker start'
    } // stage

    stage('build') {
      sh """mvn -B -Dmaven.repo.local=./.m2_repo clean install"""
    } //stage

    stage('Create and Publish the debian package') {
        sh """mvn package deb:package deb:deploy -B -Dmaven.repo.local=./.m2_repo        \
              -pl  cadastrapp -PdebianPackage -DskipTests                                \
              -Ddeb.repository.location=/var/www/packages.georchestra.org/htdocs/debian  \
              -Ddeb.reprepro.config=/var/www/packages.georchestra.org/htdocs/debian/conf \
              -Ddeb.repository.branch=master -Ddeb.package.version='\${project.version}+\${env.BUILD_NUMBER}'"""
    } // stage
  } //withDockerContainer
} // node

